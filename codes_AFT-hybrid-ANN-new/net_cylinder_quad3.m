function [Y,Xf,Af] = net_cylinder_quad3(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-Jul-2020 11:18:12.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx5 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-18.528540637507074251;-1.1960582719147727637;1.2944927204007004029;-2.1912725459198005851;-0.76632767814859426014;-0.031006160390870774607;-0.007950174160741212831;0.5063098096279641247;-7.0905150776283063507;-0.016772564746180822215;0.23017300716545380235;0.0081166353892614413051;-0.88651239397380898755;-0.3136412010738680034;6.47365326646336392;-4.7364364232551947609;-3.9434166698928159178;1.8218631544858974181;-0.033199035382830636987;37.439076425981362206];
IW1_1 = [-0.083018127536281988155 -9.013391123236502267 23.746190886351875804 0.63458488633810050672 2.6085619063280480745 20.58195916111882795 -29.785107995507804191 -3.638124924261594284;0.049892708475672974122 1.0945241803135543623 -0.99900587712983979216 -0.048720836122905251953 -0.051513017069841404716 -0.44215785793648326729 0.94566116135837985368 0.025005810756518646182;-0.084413560271960980108 -1.8240573704431370938 1.67590378028127307 0.078363863867896774162 0.092748238654210099496 0.83376576789121026323 -1.6773343857196367779 -0.042046391711220904019;0.84030696317997988221 2.2658072041715247025 6.1142992234270447938 -0.059169593573156271937 0.32343412024451506648 14.00841038982095732 -14.528747016902400446 -0.78100018778382251927;-0.60788367314088809223 -9.4823589806217629672 9.4931205146902897241 0.54546458102108330568 0.20847349595642092335 0.22299884505162334558 -0.49941931345321960434 0.15026552174739268852;-0.65933421335564268428 -7.8038584757484024124 8.4329560843484063781 0.028232790072522138264 -0.24995020173500920313 -11.312210893650307852 10.822747304635717214 0.63113932828192575997;0.0078861566984567334909 0.63360999082917790481 -0.48705496648966389861 -0.055324345875924454963 -0.07417302428374815404 -1.0846818922462804213 0.94455010232234160039 0.04349109915805428328;-0.36448846432631748504 -12.573937118362943366 9.6959701853451605302 0.82123113736685504627 -0.39175336524920978398 1.0745492074723315135 -1.2373131690976058028 0.14867052521570187085;0.27137838440056899492 17.996896473333496402 -20.548063804668611709 -1.3394912478656557653 -0.42381460463101322533 -12.135185600444406973 -3.3391359067501520386 0.29366437556483004911;0.02520700551695110106 0.1764965584092000328 0.095968650088340462512 0.015101259744899972123 0.045962874248299812052 0.80560037792294125758 -0.76183183172248469806 -0.054463544363352031641;0.23783583009113370976 4.2336972177448037868 -4.2327804005988998171 -0.21803853493960315135 -0.09304966739122458308 -0.27803403193651082814 0.42050191794051861027 -0.072518661224113906139;-0.071345282812510735226 -0.87171163721849098671 0.80171007740569633082 0.026962416727277022793 -0.043486739639851265671 -1.0928929168183341147 0.86537308075966157261 0.082973145410591711557;-0.25027737197495764088 -0.81489383640564461153 1.1978133764507736814 -0.14723248617925699389 -0.69653742227735249148 -10.415139829939612071 10.262320217543475565 0.77274558931354520031;-0.41615351679871848134 -2.3706216067700780492 -1.5035901847120687336 -0.69874516088365468125 -1.1873910921940424856 -19.535848958494227645 19.68181783457421119 1.3011989812961224366;-0.58982658775135032858 -18.307785865697930205 20.527747049368649357 1.3988328982108675369 0.40921602753716102008 12.003090061567714741 1.664876759782497162 -0.3763081386743415413;-0.98568459483017112355 -13.592529607790462265 8.2443667752335283438 0.762235482780521445 -0.60108285191311927598 -3.4669494689741897631 2.4609482183874633598 0.42967638879178970956;0.18314357970104377937 9.6281284812452661015 -1.5282422940738922268 0.77588446637857788613 -2.2615099501216393563 -10.167461658024858906 18.946956908091976857 3.1703519877689170237;0.077750009847257911533 1.6704167311732021073 -1.5132481591614490579 -0.077685463584987193841 -0.050208359146678468998 -0.32555188904065962552 0.9563736120288069964 0.03047170296148262944;-0.24970569431490768908 7.7109906477905534317 -6.6373857414442429814 -0.73489036844678312654 -0.83079072296259015573 -12.882155930099347785 13.516775790775016119 0.22239823345568332513;1.0414122344373826223 15.531210646852896318 -15.486822437477043124 -1.2343401602877597245 -0.38649141253699847987 -17.589856918275991404 -18.127128858177396609 -0.72422076667812251838];

% Layer 2
b2 = [1.1176219618988343374;1.7350685463598807257;2.6152452441692881635;2.6954055813169111033;-5.8796623802983827289];
LW2_1 = [-0.0056254914397284973629 3.0060699806912056786 1.0392094456931790791 -0.0059370165003242974383 -0.0049508985242259937951 -0.059997295913548999435 1.1860552542021780553 -0.0078481800082800794865 0.006097357152926739278 3.1387478805065671672 -0.12889594202034709847 0.94174302529198439249 0.0094081879253392897144 0.017351870187320823924 0.0078802487948130758855 -0.0060704325864563823262 -0.0038872510719157346397 0.61456689029115607603 -0.044889501883257236503 -0.024069780849111543919;-0.014183756311642165687 4.142799309488131243 1.5079272987381193705 -0.0081972484628132433193 0.014971671199304481537 -0.064279942468156339719 0.68483058492991344401 -0.014149761491438426694 0.039638193425937898184 3.5837615974652381468 -0.027009804689781646836 1.7667897179839224808 0.010919303223344851289 0.020470494541579717374 0.042140613781038845087 -0.0062837955651495495599 -0.0073443347726550216661 0.46036496157654011041 -0.048582985562025643445 0.023379868633263939381;-0.0090805383921714506734 7.6573630621914690053 2.5758224122014725666 -0.00085520926651649431614 -0.1355835378599243024 0.042288171383093230149 -0.21420711993289345831 -0.015364376816391338981 0.050221869631793585043 -0.98130069747796411228 -1.012363668970141406 -1.5674788301197863927 -0.0010538316519976165687 0.0024695937045141028339 0.056920491385200958079 -0.0016521398138706865077 -0.0022682412443893267516 1.715884313522342719 -0.019197948930519490723 0.037483798492885182785;0.00066964578484967100195 8.1717469968488867238 2.7135341513549477988 0.00061205790324374200612 -0.16840728071686547618 0.034661407067574923069 0.34431909611227867751 -0.01442794735649632204 0.01578894081691801024 -1.3296709563341735372 -1.2280078712109117056 -1.7572735024075596399 -0.0051664109764051188364 -0.0057158212265421446882 0.021719663082203563564 -0.0029569352849309325261 0.0024742094465460694359 1.9885039188476145711 -0.023708830923591744932 0.045148649602593439456;0.056557784595870561062 -23.349040153828514832 -9.0405331981857557366 0.28810696756134190899 2.7155054941587821737 0.1279845606352653653 -3.8165616931544183998 -0.15924459563602313961 0.68255843048897835157 -2.1223501662951829161 4.445357132800385358 -6.6237642591393246505 1.8305131154217060274 0.064005030553064543031 0.64097397180563120411 -0.26882565370251326753 0.10457837894328943229 -5.172423507899465811 -0.10379118197624888353 0.67365589007176551739];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1;0.1;0.1;2.08557214638193];
y1_step1.xoffset = [-10;-10;-10;-10;0.143889661652628];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
