function [Y,Xf,Af] = net_cylinder_quad2(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Jul-2020 13:10:39.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-6.0880143709625906823;2.6020181792201060311;-4.6930222153613385672;-18.108331908181195757;-6.2853839458793254735;0.22872904635264160178;-1.4490813154827577591;-1.4708884955049534859;0.02109882967348247762;-0.019519611913522617874;0.12480694739091378886;0.1084799015032599373;0.03134473280477231838;-4.6725652645188260337;-0.031297185442882596851;3.1268382154875666856;-1.6565877701072795336;-8.7503368750399665998;8.7454512222972784485;18.689598600622183255];
IW1_1 = [-0.25223549135284828449 -22.556148482670085542 21.702568636351045939 0.61518780177968845901 0.28168840493727026475 -6.8990754366223638883 0.57875985676846852801 0.85835472704545601186;-0.46558192353547261932 -5.2997035592692940398 10.810424906561710401 0.45906623573579685704 0.72099238446272373437 5.9338567237765893481 -7.9212600787008238257 -0.58666387320662105598;-1.574930431250623375 -5.5490454362352394924 0.045747195646235000455 -0.33603723807020718928 -2.287027040105792608 -3.1864698844493539731 9.1831652219469326326 2.8849050387829091591;3.4505691102664530767 21.487354547218640022 7.4524089439313936367 2.2231092101543015183 2.9739551722548114299 12.032405188472141688 -10.366057871200673901 -5.9928734161782957202;-0.26424245753498631917 -26.350083894556597386 25.375659538760157119 0.68592624674569979693 0.30697128552483465835 -8.083299202085068913 1.6761283621658056298 0.88125851685403100433;-0.0039277014217197550594 -0.31589681289521648333 -0.28075828363118054964 -0.0060524488051037972011 -0.00058528857307998060321 -0.50821617243171879341 0.52082567648817446049 0.0011583973770288604182;0.065696082703377178813 -2.857247547211132499 8.8448816579492497425 0.96071465719584581144 -0.97595601723581815179 -6.8152807792123599739 6.761860723994998601 0.43267714231603787711;0.065307272029536428404 -3.1437314662521611552 9.2305849424585098006 0.98964845330741679774 -1.0138867241979483413 -6.8402474226943450475 6.7824171299571940352 0.45825605906790567445;-0.0041646869147331042754 0.3215179476845350659 -0.3827440519303082489 -0.001024660686606326419 -0.0041918737358252163364 -0.29934278299512356858 -0.093751711676352988967 0.00042211285730684176875;0.00088953251202963392295 -0.20902612687519478429 0.25190947342114444751 0.0013613204792141625574 0.0021746715642137438504 0.18009728434301169875 0.075461779864230832393 0.00094923956696050691348;-0.63821434343376759468 13.356150198928352424 -15.467927457429141214 0.54689814295381544706 -0.73742084071190527883 -13.628465538585102124 9.0032399991821598917 1.0163969634536962339;-0.67249740195815377319 11.254763432173438886 -13.267589903295839093 0.59566938987944029193 -0.79405597751170808873 -12.139469411284952827 7.7686835947246333234 0.97967229047313353352;0.67589991898172885332 1.1795643546834773119 7.5284328740511616829 0.6216910071123920023 0.18532763909622218534 8.6577309554352002152 -0.51708084567340872884 -1.8360902258355658034;-1.6033473517916965179 -5.9709237278646707381 0.53165629199251518422 -0.32837291718708089272 -2.2269288654354224555 -3.9619031948886038741 9.8042736266999295225 2.8887525343663158495;-0.6558792650879324837 -1.3098696054087344276 -7.3185717604931088687 -0.61582928722823626622 -0.19119232632003629879 -8.6203572774741719087 0.61640947790303846077 1.8024878284046323973;-0.69975629995821586604 -7.5502027977784287316 14.860942017338942378 0.37258376301423989929 1.1335794597923507521 0.35743400039993616923 -3.4997200495707154744 -0.47184657891367365323;-0.038127740062084435058 -0.88270578513725572734 -0.7770674289337966556 0.014509880375998622168 0.0094097540014194073349 -1.2726619787524633409 1.3072860193364912451 -0.001645916991719468354;-0.35585600580672382964 2.3976576153059174779 8.7379164966159450501 -0.30297461707531608832 0.098904443204934397449 10.185218658690942561 -11.640350826623656388 -0.20362394374715231393;0.37532253572366186534 -2.3536191075637122871 -8.8290045138423920434 0.32474709041716842695 -0.11043868451679156317 -10.117317760351209444 11.622701339760038053 0.19644315409893733926;0.65352104017713774642 8.6959132458770049823 -9.7709534335288896756 0.31034057425206967862 -0.44754289329764995742 -3.7820440141994127181 -13.965105596772732 0.4584747779279891855];

% Layer 2
b2 = [0.17307335635128565099;0.12632351467782762522;0.075569006009129122137;-0.052023348928146834202];
LW2_1 = [0.13953359101735060555 0.028222343879158409696 -0.17404872972628129824 0.0038427612024256666001 -0.13080425140513596283 -1.6619842006104017518 -0.55855661078742235848 0.54393885664289165494 1.6044764765228001213 2.4740028818697918922 0.072312821182414679932 -0.079837989315236668197 -0.42107471648777561324 0.17562725888928906737 -0.42139853887289813184 -0.024709972236257773948 -0.23507122624471860073 0.47549859602021293803 0.46939455247285205575 0.0041796895431089400863;-0.28394204651832305464 0.018895610011704953163 -0.096192357006211190451 -0.0040865617206907343603 0.27233500168087532156 -1.6870395981818373521 0.043955913245067770867 -0.048982556998865778297 -1.2470688609174858108 -1.7833286199600284494 -0.031708905489569401415 0.035215966164946294059 0.38863887127171092839 0.1006990955808275412 0.39083167537661767099 -0.011404974446221939621 -0.22575198782454061752 0.046625213032103478283 0.040812194898799142306 0.016764646230955391332;-0.061610854624132578572 0.004113521212224791751 -0.094623434200661757365 -0.0027059545582015184263 0.049697889002748157905 0.28082323711986362236 0.23000207964900062918 -0.22877961581772973676 1.0444196888692534042 5.5025813586452612114 0.035032183382632822721 -0.03006075588600372675 -0.048041953156152381044 0.093780377967054573407 -0.048452624892144705027 -0.0056914496409781320171 0.04450559031123142717 -0.4593051806164647477 -0.45599527368227898982 -0.02947939232121826042;0.072645717686188937545 0.0063050609802529989159 0.035631152472472074622 0.0020961224214797683635 -0.071910490359354900525 0.32267426372962643155 0.35618842861517119314 -0.35140032382134972488 2.505987997616736962 7.66325434261975591 0.046624357027009434573 -0.048636422845129950732 -0.0022387713156276998344 -0.034968371827994657042 -0.0024777645564230269329 -0.0050959781277818182524 0.037057710295549509127 0.354712611480623774 0.35368365997294654024 0.11652909481214554499];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1;0.1;0.1];
y1_step1.xoffset = [-10;-10;-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
