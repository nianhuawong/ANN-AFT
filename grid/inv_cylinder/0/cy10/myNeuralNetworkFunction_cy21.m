function [Y,Xf,Af] = myNeuralNetworkFunction_cy21(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Jul-2020 15:59:17.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx2 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1_gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.2420639020177413;-1.9510457009780957;0.8312399840327247;-3.7193544835283152;-0.82427460452783008;0.51789596128811222;-0.79010749856933471;0.099681787380695844;-0.1675599257667659;-0.023726200101282194;1.2342066099528151;-0.055527415313503588;-2.2233157459689514;-1.1018755527489164;-0.57705579290047737;-2.0304094128269328;2.9074081181143048;5.1232838001184478;-12.149337586679897;2.8862593832159682];
IW1_1 = [0.14342058197762717 3.8151126495687215 -3.5768879395801361 -0.30648096818168308 -0.20672238570613685 -3.2266141300888358 3.4911638619777698 0.091167859055818617;0.077442084409123715 0.3751937896551199 -3.9140433310364848 -0.18815145276451095 -0.27597525278642959 -3.0169418444883234 4.027326518968434 0.049781349299255873;-0.052524118937772493 -1.20427176658918 1.7582400968818093 0.11880454336371002 0.061086267894665092 0.89678397830229306 -0.58634172907384852 -0.0061434264510317402;0.86046624960763407 9.6331911244118338 -17.841394769314576 -0.60631735071567594 -0.032420223493010422 10.216122860597331 -3.4590517618883627 -0.17533566337590717;-0.068395391787012094 -1.4799434678106738 2.2199022269062691 0.1600727287769271 0.083391900228806395 1.1101860627331135 -0.63767016145240951 -0.014045542565903882;0.09934324795925302 2.4384683524398292 -3.9751720497788217 -0.18441935247041877 0.035268998975701842 1.1545893010788 -2.6099017156675539 -0.18514014542198365;-0.63479708662663192 -1.6390769802144884 5.0786531597642721 0.29908928363126053 0.56736051771165119 12.283589535701189 -7.1147205543435694 -0.44346153125104798;0.083750087144889337 0.95123786376305164 -1.0911819554985822 0.03238603705750636 0.1541201610335243 3.894188131064519 -3.8859800216075642 -0.1410609093368837;-0.48414884326054564 -4.8890828032534444 10.619809817698551 0.67525897298188575 0.46300218771991142 -6.5788041508145101 5.3425305447169302 0.26895350960161329;0.028149133248512967 0.48473472942764723 -0.9881405478451305 -0.053297525974746622 -0.0072800924653424115 0.2399238085043304 -0.12292262197572602 -0.007261160433129632;-0.035906273298108887 4.3862151715702282 -6.5588074197335207 -0.50801815706671161 0.36018061125975648 7.3110036871214215 -12.875105709713564 -0.15168416694653558;-0.35830035385352516 -6.729833138447324 6.8214840257443141 0.34034034483532066 0.055916976764510767 -2.0966038188705469 1.8572346977275784 0.18431222779708592;0.32860413540205197 4.7177844144510832 -2.1913366053239938 -0.096487502443154599 0.1808141761125284 4.8766848400636391 -6.040026814156886 -0.41930235413429334;-0.15521513619459434 -3.5473670361492755 3.2701241786116806 0.28013267440113537 0.18199612286329736 2.5975097678515677 -2.8117697057054221 -0.063494278623251785;-0.33707319766481897 -8.2885064896174061 5.8994963745333049 0.58446578001178728 0.21445897726107344 3.75340369520928 -5.8641102521136474 -0.018636130373455455;0.089503680708429526 0.38420670460177409 -4.1331430448186834 -0.20170868096347269 -0.29932694867374277 -3.0828741226600092 4.1510866153183557 0.043165907739077414;0.50371515373085962 11.541848200567564 -10.467427814646427 -0.693322593515032 -0.3185355561445477 -1.3593959199019128 -0.84614488415845035 -0.52121754127899167;0.26110233334626964 5.3037760086108818 -9.3652002538340202 -0.29495029758119978 0.47876218223422529 5.9837714789749157 -5.3189542790977811 -0.35346982750604783;0.64100107505951909 10.24716022923111 -22.759750159812569 -1.3111042597240021 -0.021568460432562608 -2.4106579553580638 0.077303906961118538 -0.12348496894668616;-0.053758234063253731 -1.8260613823199641 4.7162546713725897 0.078022897321812737 0.45963149677198767 6.2569038817646989 -9.1236494516050133 -0.39786892859746453];

% Layer 2
b2 = [-0.079170971558556361;-0.50010850701296683];
LW2_1 = [0.29572918481253752 -0.27517712671539496 0.22817945586888344 0.01812708052615733 0.17566979307810712 -0.046591380883257712 -0.019772463464455232 0.40963441440537662 0.0032584413807080236 -1.4189358700388555 0.00031297397919993731 -0.037086214006412072 0.050561800071996135 -0.3126366996274561 -0.013868477583948805 0.24395471823677445 9.929708027172901e-05 -0.05439682938460539 -0.033912005202075199 0.031689920809220617;0.44328861431072436 1.4635095082507918 1.8964542954366401 -0.012210075233331064 1.0810513115772551 0.082846975510257367 0.0088620418727860216 -0.047952781928545817 0.020734535830039421 2.2411375127262096 -0.023626895217473777 0.19110736092271763 -0.057809909991021743 -0.46783044413757091 -0.042064446146317637 -1.3480083715047932 -0.044718535338247919 0.036361104799238028 0.034227063855782135 0.050388668383433505];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [0.1;0.1];
y1_step1_xoffset = [-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
