function [Y,Xf,Af] = net_naca0012_20201104(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 04-Nov-2020 09:59:20.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx5 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 4 5 8];
x1_step2.xoffset = [-1.98380155370086;-0.347451482871727;-2.0706955833231;-2.08925811287175];
x1_step2.gain = [0.576177596995091;0.558599373916408;0.514938780939072;0.495493727223671];
x1_step2.ymin = -1;

% Layer 1
b1 = [-6.675397307328737817;-5.589950659721483639;0.19969142404123232937;-1.4523188917291174338;-0.5361248080563545404;-0.4899802244940039686;0.097733948126295308589;-0.49609116397329910964;3.9816975847288134105;1.4039407111042701004;2.299589780122500926;-0.76297057720758332255;1.8130407960798666789;0.16620799088211979377;1.6125928322853140262];
IW1_1 = [13.518317438012475762 0.19475424989213407923 7.811010359676755499 -0.20006703276535067748;-0.5712759483281024675 -15.500297824640982824 -0.736823680464216757 1.2888073782511471066;0.022491865461162566242 -1.3293412199802598916 0.050196000065050143391 -3.2297587259012141558;1.7635513795142920834 -0.060107154995912952244 0.74107020803899781303 0.021791852112650327011;0.5010127945610763911 0.20877404816381953112 1.631619398511599206 0.56622042530799254756;0.50337741699829474662 0.32876768366862763049 1.5560706853012726825 1.0179383818432385933;0.020043803190295510913 -1.0565567659174450732 0.029700938117070297545 -3.2590204652037733091;-0.026214205783698738689 -1.7291604449531614573 0.032527538115771255367 1.1006741382161873144;0.32552037504739789187 15.431240100139218541 0.25735457541540746051 0.82736665082982685515;1.4678771512083284012 0.17788426073187718623 -2.0737224284482684844 -0.13924346348888808067;0.056481802279554717272 5.1618890711731646448 0.074783925347466667644 1.7003467552755844316;-0.026084468369051955206 -1.5774490097936157973 0.023745225158516080483 1.4743284886255778598;2.3975228270970672106 0.27092872181231392181 -2.0386770051256237757 -0.21254966579392284287;0.19413647154503141379 0.34081656329995618782 0.32760664924626536898 -0.1573056556955307328;0.021527582753915138619 3.5492095170706750018 0.063273364767265999342 1.1114934162400857964];

% Layer 2
b2 = [0.61641947466351509899;2.1355313609730726121;-1.092402038786241647;-0.2940449199103799538;0.38644695869661543908];
LW2_1 = [-0.15871425024883015209 0.097035649620862085563 0.65012541715003824283 1.1953480791014783335 0.73075634116700538545 -0.4801804722679427484 -0.6550820268475738839 1.1502400082134900394 -0.15914224177814326189 -0.35055580499154215257 -0.51226433785564151613 -1.7083811325663067482 0.048557325078343809011 -2.5023657704632626952 1.3894170610063547588;0.048876479481879897548 0.13639749202857312516 -3.3879093904585597663 1.4397597867601317212 -1.1677472932440715603 0.73325840209416481841 3.4219862507175617949 -2.6504369630120057089 0.043132119312528915955 -2.1772295275097004463 0.24714478027726943798 2.1011013047383104713 1.3128281867590854137 -2.2971048672845295613 -0.59271472440226447009;-0.71053438141706115605 -0.28765293319954454709 -2.1058537374004488996 0.25093722284306924086 -3.6513571986187609575 2.6757640879336590523 2.3363122574016337296 3.8517045795219027049 0.33220563852856455078 -2.5167241886457065725 -2.320138204689176753 -3.7819995856925303634 1.9082869025990754075 0.52191109676302027687 2.7464346103015135903;0.71050596605429761077 0.030235562933795086943 -1.3712270819418475032 -0.59826500399196791413 3.2432134696016423625 -2.1125423768169935279 1.2832274992812284786 -0.56364674049005925038 0.086121878047409505808 2.8383609090853303414 0.10932849586508590345 0.67147689754536177276 -2.0043662974540206179 -0.14832209160288728489 -0.33085487769366195288;2.8415362762456641496e-05 0.25741737026574978975 3.4770808193422673149 0.34732778114888729348 0.40814372901714990327 -0.56322171111668439814 -3.6195397566828351188 -3.2880578390318420112 -0.41832751657597350148 -0.32163672043959801172 2.2108097088241089878 3.1105226881471668143 0.096079394854927585579 -0.37358900516013743287 -2.4155797326078736198];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1.14141129856654;1.483056674239;2;2;2];
y1_step1.xoffset = [-0.347451482871727;0.346901008177912;0;0;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    temp = removeconstantrows_apply(X{1,ts},x1_step1);
    Xp1 = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
