function [Y,Xf,Af] = net_cylinder_quad5(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 08-Jul-2020 11:19:53.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.69595411757858050006;3.9474806414800545085;-12.475758427660359473;-25.298762892767857835;-4.6655315893869389043;-0.083736244643590362902;-0.01125341755499781847;0.0061159071489418270415;0.10134810181846180821;-0.023313453816395872387;0.0015835358266634977017;-0.046792670093619731508;0.0063656052251429215416;-0.87161781113252778663;1.0087173760777685683;-8.2459408906223270463;-0.83857609064312299552;1.6902052979248067821;1.517285796908669715;3.9371406706404377118];
IW1_1 = [0.016231834253107996907 -1.2886661285647116326 0.92585543954933835487 -0.0029832715105267849226 0.0041445303108503068687 -0.51994436186159320723 1.0851285437790421096 -0.029480227565219944974;0.13266325701583059349 2.1638872546655845142 1.9991780231101334842 -0.11132515087272495946 0.074951560407135089936 3.1005206067988964058 -3.2631515025086441639 0.11091886855041405147;1.414995626562886244 -2.2228466910285811231 -4.9072178360032321365 -0.73033539339309483385 -1.2021637474450352912 -2.9943407443917040567 -4.4239975030695521951 -0.50298807918857912913;0.015207830221880174262 10.859551493715425607 12.950598250487320939 0.20543349111279965435 -0.010539489169924263004 23.712410859535420826 -23.685886945087574418 0.0028915010221628395862;-0.14590218458180390093 -2.9413652534397627392 -2.6447511618148156209 0.1926881790254237059 -0.099692112883022473979 -3.9276474072383300573 4.1845302393143688491 -0.19311358239338666243;0.037144655040216106867 -2.7585311910982919237 2.6534810906392527485 -0.0088539481786518662437 -0.078787595572734597793 0.78395169884278625982 -1.3999249323812590351 -0.089001953875100278668;-0.024069404227000896351 -0.33539754230475993246 0.1374754169798882153 -0.0044218514409200982557 -0.041254708673804423025 1.555164295165602617 -1.5560480191033745356 0.034251292974683433812;-0.02012992960697384745 0.45650432650838740356 -0.69134807466162984113 0.005767003540289383258 -0.011300728387418260135 0.19029977509027776184 -0.21553242705949768321 0.027154927294800880466;1.3107233633284833818 43.999519066968510117 -36.907173844251303763 -2.4367536660796247361 -0.27426145787204125881 -11.665512867727333202 3.189984368509884316 0.26518205349786849734;-0.0052113587676092150425 -1.2688427953988123953 1.2440933294025313671 0.030713677660756548427 -0.021512936434786349149 0.49063392720957138549 1.0612954249185091449 0.00080653318161488947967;0.0490515322595314468 -2.5250071672681544399 2.6487982255615376559 -0.033179433301712121795 -0.011915609498404243841 0.88308210493066630065 -0.8367122163640615673 -0.055023337052671532355;-0.88662090481244659745 1.6696659768833614912 1.0681050328888828105 -0.55203246132093175547 0.54093693350625482452 25.885060531994287913 -26.312814811797480274 -0.10235087477858696714;-0.0082521632455668913336 0.35636340322648923928 -0.35740681703770149635 0.046100562341288640889 0.0085957987690352781474 -0.54008316389749000397 1.9916291190697388291 0.035193772650785250244;0.020414505231956807385 -1.5007456621364339 1.0812493929098436762 -0.0021537867935193218474 0.0076329065529495733478 -0.62848432146041710578 1.3055017914012259084 -0.038750431354304289144;-0.010664974295232006185 -0.40195249676216804335 0.38432175424756598314 0.012444822687417738533 -0.0018314291770269268411 0.1385589392390069452 0.63240634599333733767 -0.00045710875226355349383;-1.1059110552263493599 -5.0489289240002284131 3.8367665346110522151 1.2859422465513532519 -0.029239541802705472373 7.4886107736627351983 4.4444065177969598324 -0.18483999197913741908;-0.0072253044019544715448 -0.33848277072045257485 0.31266008006962808796 0.0096103408710877871735 -0.0013058768215464242914 0.066355346400162593112 0.5162527350856328523 -0.00336470212231007159;0.015818923375670153331 2.5635127784359794667 -2.5184881837430266316 -0.025133529639128904254 0.040753026920922238996 -1.4610876181949954411 -0.59445901106326448637 0.023317792207566013368;-0.016547619786435898565 -2.2018105711659790025 2.1862759659624577679 0.018141349396139695022 -0.036052650476819741998 1.2721053427878998843 0.54598781773623616953 -0.014538460803276531674;0.11975886764939595863 1.599651174679117771 1.6389375549992275527 -0.07135574404969621809 0.051805168764306339102 2.4664293149231277802 -2.5714361987899150286 0.068167487060561055001];

% Layer 2
b2 = [-0.92760604631709875356;2.1001889585035664609;3.1146827824749609981;-3.1771192498787446112];
LW2_1 = [-0.8636444592063160508 -3.3278393249862996406 -0.016642887616309887111 2.2045068335170041607 -0.83850332030654062265 0.17627850421507584855 1.9898801719619971795 -4.7824792912627032138 0.0052350162395438867846 -1.7513702937751660649 -0.28498521086329076102 -0.017775619003595376916 0.90667636362398940086 -0.77024504679211769353 3.3677993935850434326 0.026689536052059464194 4.9542448687376667849 0.97369416546579568017 -1.1622778681765535413 6.597035242835494806;-3.3802306164021351798 3.1709105342816705786 0.018093278294072777379 -2.0355996981443968963 0.79138135209227156164 -0.017318834971498435482 -3.9121463797997373391 5.8547802670481789988 0.015730435196760376299 1.747757024864119435 2.1958993932613450895 0.026417825721515009879 -0.63317035560127266081 -2.6475224996678932143 -0.35380079326629448877 -0.019322215681258209791 -0.16821333866558485504 -0.95101461395107156349 1.1209747308804440813 -6.3234777809541045102;-3.5760148454884377323 0.95022134843128358561 -0.0068874752488853425644 -0.39662209243994278607 0.30271736710021851513 0.57055924386184520003 -4.4221876543924620862 11.983219816606576202 0.013037002031074631375 -2.9609122786021919715 5.3624868313310836143 -0.00077350149199954484382 1.724988235568396755 -3.0139771228787970436 8.9047396837456567198 0.009219904238662845683 13.252570703690723875 1.6556404087825087323 -2.088125907308551632 -1.672141041738897993;0.91899111741199701608 -1.8023203204917292997 0.0017157476905040095448 0.0056469522918656568644 -0.52568521114051602883 -1.0358303237309469669 -0.23683316784012956036 -1.3578071093182046969 -0.0026777177895814944023 3.8780039577541316476 -1.1553129025613440017 0.0087881942488985693301 -2.1537218825224919705 0.75728418416950071812 -6.0119543861011255359 -0.0073608268546857822182 -7.8445491843087031825 -1.8580424820683689724 2.4401975283029937458 3.2059235651911990317];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.103571428571429;0.1;0.1];
y1_step1.xoffset = [-10;-10;-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
