function [Y,Xf,Af] = net_cylinder_quad7(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 08-Jul-2020 15:29:23.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx8 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.0468740432184926448;0.46381892006696029407;-1.715104209832599258;2.4671693728027150883;-0.36302065422105089798;-0.095470164391747033839;0.20793675238147577011;2.1451996546421123746;0.13918264128100676924;-0.43500842468350386927;0.028832961856442993615;0.0025195569002549435614;0.042859180146483669138;-1.7472963666650114245;-1.5408764471294618126;2.1345582023970304242;2.2780027428163163172;2.0761380705442826766;-1.7604791823195498068;5.2847886724232138178];
IW1_1 = [0.22397639698768803673 1.6623706178517938525 0.47020703431344879064 -0.14674032049888638407 0.088275837231823264806 -2.6298535376460625557 1.977113023484267762 0.46150007356875077935;0.013382356654565226439 2.1852874240145783169 -2.1005082500722704886 -0.18584423876924080488 -0.018091037074551216679 -1.9859702260150491337 0.75356945942879860478 0.07127978892679243117;-0.41814792998844202421 1.7991685538575594716 1.4954600510372495492 -0.78756768212946259844 0.13843153992719375855 2.9424650583233846746 -3.38720354799593526 0.22572527931295688353;-0.041541267578052348819 -0.74076014530587264151 0.63283946353428699449 0.15242208712073584964 -0.16907014397491718083 0.90613631981050990483 1.029383563222072473 -0.082359162280199099682;-0.018721654626176715414 -1.7993268217045714774 1.7325889699004455302 0.15363618053234695537 0.0030392520177271462392 1.6133935049945618001 -0.64908464497031759244 -0.069996366595806824851;0.0026206304905438035889 -0.59373847215073805028 0.65822872900192030965 -0.018158600727647310896 0.039826306392629677589 -1.3609486818259204366 1.6372266040931062747 -0.033526407372863151202;-0.082933107325310631563 0.57649062333646894363 0.15843745296986669335 -0.15301960174026621453 0.04062396366880675902 0.41861020963188183552 -0.54605317678652431912 0.035117314621406978126;-0.03639684787293898105 -3.3722402986965893668 3.2256929293830065575 0.24924074093717557554 -0.082700568378482899878 0.49461843435780711298 1.9742997199189449287 -0.12992386360405563939;-0.049808413709857980722 1.0123034319016630533 -0.72435881239314447999 -0.063073389661333245648 0.024105186914118635622 0.01271298768959226895 -0.17610682708997421608 -0.086703779038465531026;0.13846180954522774309 0.97073038200682060239 0.16911018020399049 -0.1525379696057075074 0.028246666391245112832 -1.6052555547263096525 1.2229768333284916082 0.31391113120930214109;-0.020627112347287736294 -0.27656254806656421774 0.39498382980580770685 -0.0057725804089437228808 0.033632672773474960037 -0.90628822441279432987 0.76199736663774608747 -0.050187948977542660989;0.1129253768898766247 2.6185808652127202656 -3.0864183848875486049 0.32744552355916267672 -0.21023765212420439386 5.8799295231583910137 -5.5160329172430522249 -0.14375225452639661672;-0.47671577470944587196 0.14682357736260320813 1.7305462901241388529 2.1245464945288783376 0.71560557431101234904 0.52291937069154126316 -0.55137104381127721719 0.41919440380242051214;1.8217321574840728005 2.1041066806693922153 -2.244104124826066915 -1.9075596383333448536 -0.7213138754042869305 -3.5897770301333151721 -1.1065163947931917487 -0.060599972490339368281;-0.67170367814995624034 -2.6669248843252826298 -0.64184337840973848532 0.71717873967959355763 1.036496176363912225 2.2409167338936657465 -1.4308682048676555354 -2.044402800816533361;-0.051605041779635422994 -2.0814495795614798013 1.9758474776288554864 0.22143635462458816088 -0.12068927394694441146 0.9906382084630592777 1.3695580679619725473 -0.14161785079112718111;-0.16901036997753424163 2.1575177435286443384 -1.6001429035645420296 0.075005632017794435229 -0.027608747716445829201 0.83187825148649341411 1.5943609117357173677 -0.30300422292901485477;-0.17411419909228989522 -0.46726218219840692791 1.1249581787814932898 0.13070362451809930393 0.11912617342994934189 0.33906819737561150196 1.5369134954094121337 -0.26507012755677228366;-0.084409750891788551397 -0.64961069399741222519 -0.145360604168539298 0.11100302244891201153 -0.026114207235708612742 0.90850547319827690274 -0.66493644284754749307 -0.18085464657150027157;-0.081200179690381651954 1.5866200176021330037 -1.6769379269908619712 0.15460268492372694626 -0.53323692928215560283 1.3038894876877951123 2.748956847655083191 -0.023282243794055423186];

% Layer 2
b2 = [0.28086408763341802475;-0.012316919371920143078;0.055430659930910716748;0.036371775832435816744];
LW2_1 = [1.292957174131176723 0.39390122233202212731 0.062652538404517302273 0.64380709724154228102 0.64496166358075190939 0.39827651284398779552 1.0148043795422778679 0.010232889139093039391 -0.67014892215896837424 0.28928229945036060267 2.0905278659864938717 0.53585085394793330327 0.0059338763247564398767 0.0084255458554497054263 -0.014980857797118744476 -0.17349737644711846207 -0.085146155182051722066 0.098782744467412447742 -1.2322517923374116666 -0.55228782005168863822;0.6678139342305089432 -0.44330432069878117352 0.10013291632156481881 1.1848234818675320579 -0.83272464544752644588 1.2041853624150979929 1.8309137033029172503 0.79765714272371779359 -1.9623848306706326294 0.1161512875931391825 2.8620062871821914108 0.86552976482350851839 -0.00088487402726670561556 -0.0067731357904469262354 0.0019302309951169367794 -1.3900734387222801747 0.17323250025184247503 -0.11003481087262942384 -0.58255803668019512376 -0.5599009823289714527;-0.031848318710684483945 0.53250842765112271771 0.011071346013523376134 -1.1884205521997390775 1.136188781588204133 1.2564910866608656193 0.078459937802175458432 -0.42054308581471866457 0.38501712490748929429 -0.010894732581091668561 -2.1448215636538470186 -0.097563091994191220024 0.0024171842726935410979 -0.0017908025405487257645 -0.0013188970189248242458 1.0143666433780236247 -0.13813506592353680391 0.10148474842952766306 0.039648460676551249005 0.86201073882978995755;0.077513446227906915298 0.66845648310233740652 -0.0037055673280684759199 -1.9048636327197139284 1.4330366481682863533 1.0342429352213664551 -0.13959084231136684173 -0.55339851782939375457 0.69856260520040547313 0.049048414696867805029 -2.299333185435527227 -0.18064681987226718918 -0.0011165641544812819445 -0.003253322974442033038 -0.0023813167026644761586 1.4170368492556590923 -0.14859027648080916362 0.08931102082560055111 -0.18386519448151961154 1.2814926311395220537];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1;0.1;0.1];
y1_step1.xoffset = [-10;-10;-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
