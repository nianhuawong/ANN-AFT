function [Y,Xf,Af] = net_naca0012_tri(X,~,~)
%NET_NACA0012_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Aug-2020 16:09:56.
% 
% [Y] = net_naca0012_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.5182095327876639068;-6.1582953265837785395;-0.69224319147047785883;1.0451934002414209335;0.0064905809369172765347;-0.41221239368794149183;-1.1170015281007719121;-0.29915160245098815217;-0.076999508030778554546;-0.00038324614468928996447;0.72815228290000366673;2.7747432117085324421;-0.94705385392163943248;1.0983586773695033223;0.75771677633833134369];
IW1_1 = [-0.024435040853229474805 -2.1204848103226563438 2.0190356666809861075 0.012897865968128859743 -0.042862190556703157196 0.95395849958276202063 1.5073387800278845727 0.018234171548381888917;-0.033568806388036123711 2.4622593472456797414 -2.0197647391926607519 -0.032168143499124196572 -0.0087869896173527802657 3.8255568380405851059 4.0005881381430814514 0.21277895736183957687;0.01897642952278874931 -0.51291460102716568414 0.30591714013066756417 -0.00096409332032409240584 -0.013338308124721632436 -0.27433682579749701924 -0.58728892199818993891 0.0081980392889473771567;0.046948196880025744315 3.5255835568738396191 -1.5353895887638329132 0.080956549050813481072 -0.02369243579561930782 1.937755193646820695 -2.9092126120172139281 -0.049652005670764741418;0.018487627732615752318 -3.2551416851475427627 3.2831297473675937759 0.0139109075445754439 0.013881146799819452445 1.5856253773460111667 -1.6537325851589312897 0.039756009357423890971;0.12276052078830862468 1.3687610357109778469 -0.069458320193182945812 -0.14216576765190583331 -0.27335140413004915816 -3.7040274829399773004 1.7325778442456243322 0.033642215172906712872;-0.0059252412839394816638 0.26974142030640613221 -0.069242205306967660738 -0.0083552123521911918907 -0.0011893829439364484325 -0.86459027300132351712 0.80357239947788117185 -0.0064015675457964561421;-0.037867941602116261812 -0.81305431585140730544 1.0317967717326563815 -0.023334222963297884118 0.0015730897306118710871 -0.21947790688313303931 2.3857231750314933372 -0.015525202017069967067;0.02382175340817825962 0.09998500802567278356 -0.15200387517359009726 0.029393548800908952251 -0.0026093268287853809556 3.1784856752941945679 -3.2354961761434180012 0.014915215958033210819;0.0040128103291927012114 -1.2662175860177355968 1.4212300120221528221 0.0046123425734982057 0.0093116113547923977378 0.76568659509151659748 -0.78519110105993827897 0.015672960646210327973;0.023767345012956690026 2.6816099166967246603 -4.1640527220469145675 -0.056778473972763823796 -0.024529479805275096471 0.0030405458045422756493 -0.94462116981574295593 0.0062855221058157120795;0.038157690274340967662 1.7018866880943270825 -1.7475973874788792717 0.0061730955095894825616 -0.00520610992877516051 -0.12393977117577546776 -2.4273168749541769174 -0.0023167901006123231555;0.18026007047257924798 3.1230907071836839783 -3.5490281977114950251 -0.0081620861608992685554 -0.061422355630723110553 -5.628689829985289883 -1.1193917060287026377 0.038951241524351448708;-0.047072719495308529281 2.7143133423985399411 -2.1767115462892974165 -0.0017618701039187464538 0.015974921749773472041 -1.7336995314297334314 3.2828216016097688801 -0.040449290969971248011;-0.013949292191983483219 0.41166034740367896116 -0.17353031371538193972 -0.01641195776734213907 0.001801387679553815126 -1.7446843141527426102 1.7109482978330001757 -0.011837164499096223397];

% Layer 2
b2 = [-3.9974890644131120254;2.6500443778512461357;1.9306031747919223385;-2.6762721037447425587;-0.16582285936219509637;2.6494392957525998433;-1.4367132170407177494;-1.9792434236182929741];
LW2_1 = [-0.55943862119236542618 0.23727495814445626054 3.4959713580229982988 -0.46909300450323532239 1.4769693886180597087 0.62478729307943847715 -2.7482905065082738894 0.64648659164731014926 0.69396530073499429481 -2.3990445361369570065 -0.40478030037679507691 -0.43234649008596565123 0.4970578576300694329 2.5726111124695743015 0.92871121123375333095;-1.7924558354320507814 -0.77622890740837791057 -1.8549974463591156759 0.14327742903993334611 1.7016605459648403986 -3.0265500340124087408 0.46612809104465130483 3.6224351024747174499 -2.6158432396072810455 1.3491132169959663134 0.7217248460518125297 1.8503338566099369888 0.094810183827649885391 1.7090603241838369097 0.59413390662965503974;0.22543687546771229435 -0.029869824241122229502 -0.51617399352909698607 -0.0071720573781089745971 0.97570844665030997955 -0.041224036160712948518 1.9349999562489079707 0.014375962716512940068 0.65130491502498799594 -2.0318947337811272824 -0.0028172207656517972256 -0.39671686006262069091 0.033833761938927592317 -0.19857045196611408655 1.0976131662479200468;2.1283259581547668837 0.07849842178050650543 0.38464124897937446157 -0.004729187816175354879 -0.29156800173916791463 -0.015635302363069335241 0.057156089560652052761 -0.22399398853206611837 0.24166445831762939367 0.38237861348380708382 -0.01775815288929739888 3.8364127626378397018 0.042087023159426042995 -0.049486126879197157857 0.3359947066485339251;-0.26709904740427781178 -0.16421724163350809311 -1.6231848183396673235 0.095756522647987618591 0.37838773735062575243 -0.22275270156099352681 1.4005911963322781322 -0.29263075915500974533 0.52116257766847007282 -0.83799810062927360121 0.1097488210128880759 -0.52711429205930959707 -0.12833069881626585351 -0.92947479563931212354 1.7048332994805348584;-2.513155953766604167 -0.76880441415443101505 0.041519330939362372734 -4.024088700492884918 -3.6315595374878277823 0.19070464785024363041 -1.2442023502835981574 0.9642206833385814635 4.0767868580556054781 -1.1803092938937693734 -4.3543344180477854266 2.9196399771355356911 1.4023647505691538839 -2.2991894970960986555 0.68511197527237588378;-1.1627593147140613539 -0.08765837884554571191 -1.3440394786491633994 0.17420191743854640531 -0.94752015074651629867 -0.21863898300908846117 -1.6345832012488588081 -0.31152310852856879286 -0.57304764498196103517 1.7069686408218882612 0.13226324655181012635 -0.2097914616885965533 -0.1976783300128948373 -0.97853895059042483862 -0.44794108292506601421;0.87117495501564201632 -0.18700648294924768211 -1.3716280265146016948 0.063835630093552225839 0.034372569484025838893 -0.19069328842638633148 -2.1474877620258183697 -0.31716069450695394405 -0.27177597716247903215 -0.27005497767727465463 0.10433519129557355942 -0.16450521840932530448 -0.13338351812196733159 -0.75558091915764413748 0.62755846189466191198];

% Layer 3
b3 = [0.83015994551148430958;-3.3760345270424347852;-0.26614797484870483801];
LW3_2 = [-1.7261633590964631235 -0.033527743756585799695 -3.0500151005629607681 -1.3127253457668739411 4.3099222827776353384 0.0092711958818323444292 -4.1505738106318563752 -2.8029900130961680205;0.94762907498549908691 -0.011440668153393703313 2.1508150913876802335 -3.2201283263200375373 -0.13776534039580007329 -0.0061661019201616493537 0.70425849732294676375 -0.21511353157537080327;2.867053679301459379 -0.19739550751288162389 -0.96975534038291411054 0.025841558140752653172 0.75459746436384567136 4.2744028487998857457 -0.32686225492616322041 0.21913750063716330718];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1;1.67323969403413];
y1_step1.xoffset = [-10;-10;0.0034452562881255];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
