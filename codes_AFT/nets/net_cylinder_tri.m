function [Y,Xf,Af] = net_cylinder_tri(X,~,~)
%NET_CYLINDER_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Aug-2020 10:02:38.
% 
% [Y] = net_cylinder_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.5345911323991958675;0.92568171159192969011;-2.195726904115416378;0.48955005126275769056;-1.0719777142537907366;1.7644441931766465803;-1.3387592953782876393;-0.011531157037964310727;2.1908543667820441492;0.024985435548453584914;-0.10976178395531881182;-2.0626566907963814756;-0.84133865408699137767;-0.9378413055846737123;-0.18435639534810877027];
IW1_1 = [-0.61094531592596856839 -0.035823735414782370556 -0.98003088178564556898 -0.663928362825130014 0.50400951133398907977 1.4579124312131093166 1.5358666326009087211 0.5967275380008383312;-0.088807833881731218506 0.13690842987962253963 -1.1029470061782942203 -0.14105061545845742899 0.072647448358981639438 -1.3105421278166038412 1.8209782390568598487 0.015276978661665593928;0.0065466863995140359145 0.049323729534830641763 1.4297717346181395559 0.13366157642166473507 -0.057694064934976502235 -1.5436243072462840775 1.5567340390710122655 -0.0032700524925760245283;-0.019735833936319929077 0.15070436502901812803 -0.066112930358812577181 -0.012117895550071929034 0.012705933478395820338 -2.7204813623591990179 2.7397442116426948822 0.0049311280658415031566;0.046147553420656663159 0.055789269256171253319 1.2793410193976022526 0.15180276219294056017 -0.019918109902586082077 -0.6780724706473004737 0.44774363346027890032 0.0076160775912257694734;-0.37159038401847449551 0.57875849231984488608 -0.91336735741450847392 -0.23626699936034306626 0.15365395390077460358 -0.95198660537623203126 3.6818972132565717104 0.553380146244696558;-0.23248659587165251827 -2.7386364629190582676 0.1193694158561408869 -0.15077027805203002675 0.0056645059041686767962 -0.96388238180222030049 0.45817062810095238179 0.25006135721334882271;0.025597450897746905352 2.6842672954146360453 -2.7489684942608638707 0.027864934927061244668 -0.042415772611823589211 2.8657148888823331667 -2.7880653496771770072 -0.034538347616673792384;0.030869728924969426498 -2.0828872875826363043 2.1760249747840418877 0.0196866483947792624 0.022099335080240409268 2.0454834856533894438 -1.4516569874200799806 0.014762412670253374433;-0.0081105317963763353534 -0.82878965377322466601 0.88633247386160840531 -0.011983748694130423942 0.015374940473057591497 -0.87306743293287181196 0.83654744411874570886 0.011068016568621170947;-0.0077419759641053024352 4.9533635100663380157 -4.9235361775629842285 -0.0051011622126606887689 -0.058223912691534138175 -0.69344323604330504462 0.93116600473290589424 -0.055715234063548613186;0.0024446945253505888464 0.14898202010057084999 0.86850439658094324979 0.091080164992898338117 -0.038259777250371149182 -1.4379980732033836865 1.4402592581938806759 -0.0027196810512627607979;-0.028738423862124225228 1.4841641666496054874 -2.2285473109758489052 -0.090765724447117182572 0.032218537263756619193 -0.80776355706924651834 0.75657122988191605195 0.011970783398024162705;0.0095627793850319355723 -0.4769277777061125545 0.10714582096799232791 -0.047711373810758538061 0.042321539141205996581 -0.53949179049153539456 0.55786479373069830512 -0.0030905079109013935262;-0.00015601179105045989877 1.2841721567268888915 -1.2512608375730096544 -0.00030672423173140248541 -0.014479529231122646726 0.083250031483713946012 0.053634844624425498383 -0.014734875017846137471];

% Layer 2
b2 = [-2.7220467680718409831;0.45811363867797505467;0.76412065530108741473;-1.3883407183923284212;0.24127544892729305137;0.75606622113284249753;1.0144068800753609505;-1.7624706426722149821];
LW2_1 = [1.1301732825395807147 2.1901425954752240521 2.4689415456325667364 1.3678282587869328157 0.429867713294596554 1.5592734783728126047 -0.072219941586283961654 0.80336952179798370999 -0.65764913156225013324 0.56937425814285358427 1.0820075287211368131 0.39935412825056326724 0.11230673781649889997 0.65265198511855737618 0.77953579603441958135;-0.17718442407616322165 0.64062705835140576482 -0.018430109786771779745 -1.4654722018938473038 0.64735768359751300061 0.14750711379961989334 -0.1433198900861463454 2.1838267910912327885 1.1507148066787591389 -0.38404008840879078068 -1.9224029422876596218 0.33539225240487008373 -0.0082114809339163923052 0.85724801732847089042 0.38635863077107934771;0.0968625087803373086 -0.23979652329318629222 -0.75878156424868992147 1.0055584835734188154 -0.29705754513529913918 -0.080628705395731165018 0.069078473931685105414 -1.1075738951486771011 -0.62694521141389802921 -1.0406175277467704099 0.93567019158069719698 0.17233981380740320821 -0.25814069845280612769 0.6394336769274621135 -0.71206421235105032963;0.10428624523055725348 -0.35886787247988544136 -0.53300014677196505541 1.5917342192147758695 -0.17947068753604275559 -0.12429526602916633748 0.068940263122300102228 1.4626094005452103808 0.032205292083467819408 1.5743809811229152462 -0.95951155309479985167 0.036191781772213230117 -0.011620192771917541713 -0.10846297506927102261 -0.89583144611483822572;-0.2108783814778179555 0.44855303723713729758 1.1569420620448807036 -0.68862135989484507537 0.16283980721100685396 0.19896347153770085892 -0.14792393856021199272 0.65028256312042909126 0.63058010087236282537 -0.622508767549452946 -0.39034520332270405962 -0.29787718017778641588 0.25591021072758057819 0.16221538301853030695 -1.2489147796615245323;-0.075242734119750617761 0.11949841005637470981 -0.039541964293602023528 0.025868361492713515259 -0.037243453803265026691 0.073341395539642556534 -0.052039050670859551828 1.1240606822073286875 0.1385635671808162217 2.5939357813221985971 0.018546309194838399292 1.222953856337971601 0.054596040151345968938 -0.04905204833890679933 -0.91903264602078815759;0.0038222481354970722078 0.11452834930029952287 -0.10064213824185044843 -0.59337305124340700146 0.11117894120381617562 0.012731866146416167054 0.0058781660704132427178 0.2969675810074073885 -1.170464265138943194 2.0170653127916771119 1.7779482990457087244 0.083865575814815893074 -0.10041744002407455849 0.056445300864938402485 -3.8440145442251916208;0.38088356264981743093 -1.1162626555480839041 -1.3872676773919430104 -0.64927969313378686156 -0.27287333438464955737 -0.40652912755610559614 0.2197702357043932464 -0.55707610127541939971 -1.3775751388046812984 -0.17027195940025358079 -0.92420142284989270642 -0.3566501181710368118 -1.3432375945395043093 2.1732997626626082699 -0.64027060231270083168];

% Layer 3
b3 = [-0.3582362775227390661;-0.78615110508918173426];
LW3_2 = [0.16574210250956974977 0.49594449967983333938 -0.93656342818596438615 -0.60353075674511580395 -2.8874206734000251728 5.5228640537001538746 -0.6501973487648368133 -0.47134354958308288808;0.21318530908438920735 0.12177422046110572551 0.024586949772612051029 -1.5462560050018507862 -0.75188398127647615432 -0.5341307357817972612 -2.2275054186219840346 -1.5205720500908184167];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1];
y1_step1.xoffset = [-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
