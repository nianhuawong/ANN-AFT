function [Y,Xf,Af] = net_rae2822_tri(X,~,~)
%NET_RAE2822_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Aug-2020 19:18:20.
% 
% [Y] = net_rae2822_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.7589097019765409513;0.11000561848421266942;0.45810794483439093439;0.30639647997846908289;0.30590660250455170566;-0.004705989453742461838;-0.17911479277058245385;0.090930930271516344221;0.31048068191841848851;0.02595949660993809513;0.12358562360791881807;0.85702662642777360791;2.3144422014842556123;1.1905823331667775289;1.1747341440208547425];
IW1_1 = [0.012324408125263313848 -0.95906497933368850539 0.88752193225424458323 0.14368479306365575243 0.23103997701378534146 -2.2462400808560918364 -1.8290216106361882886 0.11406037674437675966;-0.055724603581959623877 -10.26183776974469275 10.138229775943749189 0.04623710506203676518 0.0058461242327497537838 2.9429283933237933013 -2.9774504224946847231 0.0054592049040082177291;0.061433578874723102081 -0.12231457869110157199 2.6377812770860207259 0.0069859382387662928918 0.005789031451934678954 -2.8239880598945914514 3.1487677141158845195 0.042241662718320908965;0.070764286891776898014 1.4128789245401396357 -1.2300628981264432049 -0.024253467082314589948 -0.090845969500595577517 -1.9259691294895260327 -1.0136517877963255874 0.031722913106478810297;-0.062984480327188008264 -1.6725642710384627243 -0.34972188570189233214 -0.0053672463716319248825 0.013650819592491701335 -1.3312226995311977618 1.0339695212461830209 -0.026528454487763308833;-0.0016108986223477522563 0.28617817433867598353 -0.1933498652048755706 -0.00088020347101336413737 0.0023395239439590259992 -0.18084459766312502293 -0.67905402988351193372 -0.0041193581748639887877;-0.05950088094906291758 -2.6353373153337762425 1.4971352546469192113 -0.063397157416798785579 0.036769963805439412341 -6.5310582631373579332 5.7579794611879053789 -0.019583902948366288532;0.05525146744259680498 -1.1682308589215959493 3.4409631383160719231 0.014317501254129711905 -0.035650482205975546346 -1.8425933605328570497 2.2440011022106030047 0.040337384377792682988;0.020070694986260389364 9.939865236249801228 -9.7858515150412319628 -0.044357464845006432108 -0.028300951765265817267 -6.2870246177394388809 6.3778946106086671364 -0.012335630334317275458;-0.11424681911958667335 -2.1098919532064281945 1.9747939805789500589 0.034665500497309861827 0.091145436610078497952 0.84294536592922841844 2.0045772770460876799 -0.048543482229574060061;0.16735025215697807432 -0.14449107401741892454 1.695102259533928013 -0.19734518973549097787 -0.070470529157968836431 -5.6761379108850515962 2.4742579427151354388 -0.07587468241617807696;-9.4962627824290280322e-05 1.2753327232350666343 1.0123323220379845111 0.051650997963462091933 0.017652514970198710659 2.2156051980754658537 -1.8501756268893332358 -0.019422867355948031376;0.00031190076234486555778 0.9725119298248031674 1.0916405269284563673 -0.013933623268070063558 -0.0032109297805725627029 1.5834496407448321875 -1.2138239498290512852 -0.017968419577298253703;0.0081323411145841142944 -0.5992554289078058094 -0.47616066912152665846 0.0043846993299902700669 -0.0029920781161298357943 -0.92164313776714901216 0.75076518299185479588 0.0083871048574140020376;-0.022400436297210390979 1.8321089414152087471 -2.149074877114566906 -0.0084852609878824907658 0.013949545333180823903 -0.39516511151549438274 1.0461523094276030665 -0.017572772044232205096];

% Layer 2
b2 = [-2.5293043125777643354;1.7092102335637298083;0.70407501067097766345;-0.83547924084924440891;0.29221637623373220016;0.33246694178014751797;-2.3022450601172792517;2.4738556912670270904];
LW2_1 = [-0.42961624538676840279 0.75183020591135285571 1.8944258295961828864 -1.0633309754714745932 1.6105511816188216034 2.1068665327882394323 -3.7221529498739265307 -1.5165932920381426374 1.034554343073008198 -0.94187457797114149116 -0.0079271251986940492046 1.2541905790541090226 -0.9476611228394807851 0.58126874788552018725 -0.2716058897677083861;-0.22749205397436086939 0.090022828918876432458 -0.017351293701961530841 -0.17098750384703417793 0.037691467265761675887 -1.2833376475008817508 0.011490733525741366611 0.042559350922653782501 -0.012053479746482933382 0.09789965972593762944 -0.0094245392350762562106 0.019435253424969396036 0.04066710484031135775 -0.19039899527283163372 0.30805719100585210457;0.50694246974584511456 2.9339323411044393453 0.56802944014125877903 -2.4896608202727055215 -2.1875802728778301898 -1.3627372160503670173 3.1156460301123809487 0.42375397409294346396 2.3033756880106404097 -1.2616489080999790939 1.1528293707559140735 -1.3790975387590589385 -0.99563593961589236248 0.32657166175702612154 1.6096214311113523632;-0.16139908625074514403 0.059650741062633731715 0.01690508148947840808 -0.051400760914634101295 0.011830828060431798285 -1.1337683345787503697 -0.027535535446107328034 -0.0070454508897396924891 0.01238110081971621583 0.013552139563076692416 0.00045762682846312306749 -0.028826927950207480861 0.083293471805173532885 -0.026850496844105543881 -0.22692343622232627465;0.56941176432373130645 -0.68994225222779226314 -2.2931161306118341692 0.60698684873051378386 -3.589940852436475538 -1.0201962268356161712 -0.22393026727584011693 0.60734742744709480089 -0.3536252849976602719 -0.48108279933816938678 -0.69010823177315849808 1.9668345588270093049 0.094745910143580400198 0.40931236843374324552 -0.98072937237577817449;-0.044920525547013909207 0.016811113501860448088 -0.0048000530229997534493 -0.027258998369637993386 0.086860647815099265023 0.043170885531464232854 -0.02107839617056956466 -0.0099802846480821875985 0.034732156441009173764 -0.018984361598903730373 0.000239003923670607233 -0.14251277382690649698 -0.70113942480940238955 0.74789106726719856155 -0.0095203730482243606459;0.71030589108896424744 -2.5599457737587218986 1.8040554497392076172 0.85944001024846838899 6.9418096916207350233 0.075575800145846180889 0.76597241821407735518 3.4069914106847649649 -2.5108734244261201596 2.3849649077492989235 1.5357383815032181751 -1.4216763336224769176 -1.6065273143712890391 -0.14930185939886611579 1.9211574107496289798;-1.031140147437534571 2.96071692073440218 -0.13403942466664875433 -1.7894935569500194372 -0.9748368107451882425 0.58697490184468570362 0.43833188842927850448 0.23730326228116016551 2.5800846395209107165 -0.81190702544364767856 0.71983750839333726645 -1.6090295590470076181 -0.02427530842122010632 0.76929347448301921286 1.4106776222769035201];

% Layer 3
b3 = [-0.40728271453827302739;0.61650990780952408254;-0.30332802767504224439];
LW3_2 = [0.019513373066779322179 -0.28627323194439663334 -0.0096622082727596397822 -0.25412726537403279581 -0.004651384371489489071 -1.6439896000542306709 -0.0042249965668426075344 0.72979218463970951802;-0.0054360923152552767523 1.3671153084981342296 0.014160503028993588412 1.6459440113286523122 -0.0017849211398225323186 -0.096336459723702874691 -0.0095369583530036852043 -0.54860722116557381067;1.4881760938386192628 -0.18821691864196882227 1.417430499389486398 0.090710821144211015166 -1.7506702705791585828 0.22841347021729788147 -1.8211991551565687164 -0.0035147709135707454892];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.105355608507479;0.105378201172042;1.30718457738337];
y1_step1.xoffset = [-9.49093403132089;-9.4981287329714;0.337417367299044];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
