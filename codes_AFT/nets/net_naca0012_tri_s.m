function [Y,Xf,Af] = net_naca0012_tri(X,~,~)
%NET_NACA0012_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Aug-2020 10:17:25.
% 
% [Y] = net_naca0012_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 4 5 8];
x1_step2.xoffset = [-2.12536489745503;-0.544114911973483;-2.27223783018806;-2.01913439235065];
x1_step2.gain = [0.547198330660698;0.508916130469259;0.449921353851259;0.480678119723576];
x1_step2.ymin = -1;

% Layer 1
b1 = [2.2052239799158277478;-0.88162912051773023592;11.026192273425248658;0.85608756763139470802;1.3185443931908820137;1.2267298842895835165;-0.31246333520493274616;-0.94862208666137659563;0.007589506889783154478;-0.8132195894697553662;1.2138871378253810462;1.7781611467716842423;-0.29801103366381603843;-0.30138325823543671289;1.2150581757549943074];
IW1_1 = [-2.1631332144585204702 0.35556911934012835896 -0.30498806170195047471 2.765022453770346722;0.66029214971602889772 -0.57936852579091024928 0.1448915895712994395 -1.5943662103318665402;-8.2226346701316419541 14.318824611982833517 -11.240284979857570136 -7.8748461682340291645;-0.23173658173860800513 0.24546503196278371406 0.17441601852900665004 -1.7484345176027362712;-2.4518800472997375195 -0.11123542892139558214 3.0722200834753379262 -0.22278102619373552074;-4.0169086577612604927 -1.4813177769060630329 -0.23896974990205804845 0.69599755058734069646;0.71404204036230578545 0.70793994529191550669 0.16575366583737044524 1.1680669827341136902;-0.66975343211933080489 -5.5797988354046861303 -0.27033060021516980287 3.5234674498490479166;-0.49693098250749867528 -1.9790029333203080775 -2.3544494174436163547 0.73311367427849272183;3.0710893609260736525 1.7189272160627266928 0.18874918762739956168 -0.80713838274927773853;-0.3264329558366263484 -0.048815662457029188048 -2.5276491907380052027 -0.13977411258428359964;0.10065944490464316663 3.7183389077856445759 -0.21749615072843489494 -1.3978884268982603167;-0.7117980785003216182 -0.58416810175648392622 -0.58577003089947010661 0.15694857216351668083;-0.89519105123597941809 -0.41740118454835684059 -0.60546679657990087886 0.12862509642845448843;-1.3081874637215464841 -1.353561525569560775 -0.30678550429529544141 -0.58038106395083255418];

% Layer 2
b2 = [-1.2932062935542847359;8.4885346333000590846;-3.2099007230432659021;-1.6416028161132996122;0.22297336785652321911;8.6147146100407638869;-1.5384424747700127245;-0.076570316454872208722];
LW2_1 = [0.24349787083963311818 2.2838010722363772942 0.09835642522664483911 0.59506166906962154606 0.085070192896202809218 0.77823890414989660425 2.6660257092735926143 -0.07601132740143502764 0.095676585191225002602 0.49211206461941797707 0.39578143782875430112 -0.39473206080220152314 -1.0484130440559384922 -0.47937077475081513178 0.66723978793572324975;0.066316727264524866214 2.3181131923373334836 -0.44001883441900352389 1.5236523582399723598 -1.8293738566630448616 -5.7408266034459778382 -3.341484246105649536 1.5419567648781253855 -1.641365012758056352 -3.5332830986268435325 -3.4071402472528151684 -2.0966450306622230748 12.245836375487101577 -3.289723585554177987 -1.7670571330311037883;0.37818730268361289149 -2.2334361571275924696 0.16496768870606060009 -2.1185024625938728704 1.0736688798792624056 4.5269543890030687905 0.72033934631461438158 -1.4846026588103180543 0.32320431900451274121 3.9779280207505980371 2.0069950341454352305 -0.016420326320144965071 -1.1992011608162975733 -2.2917978743470466263 0.29491780331266831405;0.50172524577567190196 0.043032992653551732642 0.15975927723078728326 0.94609677849126228022 0.024193480796757701329 1.6026015480454345319 0.64630015796032191933 0.25179520449911124702 0.10780442413695405512 1.3836915734367201125 0.10618973903526369995 0.50694770566459457228 1.2585665891320589882 -1.7699701554456335195 1.0231798962644338413;-0.31329587778433337641 -0.24741229641712128573 -0.061343353376757905893 -0.41806843700143425657 0.13613617785458823062 -0.29160830634094014879 -0.36349088377892990742 -0.10124964421473524323 -0.114620032685283188 -0.15799184052836043324 0.16036835449944986109 -0.25315122871236911406 1.0165489853954627897 -0.91776760810628965626 -0.45803528794687298209;-3.4156857320629288033 -2.9520052673374048702 -0.52278110224503482328 -4.2526063402461060647 0.071362588797635684301 -3.5224973225635674012 -7.738532381350951006 -0.04746780704665373718 0.29376958359298538381 -3.6524668004123617138 1.6620453532436001431 -0.37788399151970170076 -6.2305174670486582755 2.8376195586649033409 -10.113240866916124006;0.59313249441352700053 0.89317874237197625309 0.20672076886452761535 1.6568699043993582176 0.17843791866639494015 1.8923985259692761574 2.3071489978497456974 0.29867371358272659654 -0.030216644245147271375 1.8136961114796086303 -1.4369254475356918466 0.64690563661688582631 2.3168671488618510779 -1.0907139990253138517 2.0547749579158303135;-0.34810890098079178001 -1.5990362325504035024 -0.18312519001664492868 -1.054528759354439682 0.36789700518748935654 -1.1192618704587380396 -1.9254069269686877597 -0.1460053091976489803 -0.26231089681080266285 -0.63073134460003865698 0.019501490065764057191 -0.018762546757213810489 4.6194668121287474349 -4.4458733485091581628 -0.77271187330680946026];

% Layer 3
b3 = [0.12515822004464238759;-0.87779820728525825846];
LW3_2 = [1.9238545497751742275 0.34178718431189253346 0.33827549598400069586 -1.110759365677728594 -5.6063459579385188647 -0.36313766678853437453 -0.50579293378492784505 1.4581138602891734468;-0.9094446116588383866 0.22862791402542817498 0.3041266617975089126 -1.4455644832476819417 -0.54210574590788740412 0.30774575270393472737 0.57980010380785163004 -0.84514099114805740776];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.994189532150814;1.12173777583708];
y1_step1.xoffset = [-0.526262919467617;0.274479210544353];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1);
    Xp1 = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
