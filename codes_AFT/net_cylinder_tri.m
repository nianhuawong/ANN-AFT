function [Y,Xf,Af] = net_cylinder_tri(X,~,~)
%NET_CYLINDER_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Aug-2020 13:36:38.
% 
% [Y] = net_cylinder_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 4 5 8];
x1_step2.xoffset = [-1.96177708050777;-0.257909550651076;-1.92121937044122;-1.92121937044122];
x1_step2.gain = [0.576104211109852;0.627134863520778;0.526615798418964;0.532620144634952];
x1_step2.ymin = -1;

% Layer 1
b1 = [-4.100953330321927659;-2.4443960032617244593;3.1393529942038558289;2.100728259947547194;-2.9403998020673380864;1.4711321626740789803;3.3542647651359276395;-1.7136841636200614847;-3.2225175866286921433;5.8537879931502869724;-2.0991893372965240161;0.93371101636110231947;-1.6908955023557037389;-0.86688630363315821725;1.1771882878735941969;0.024836412137733201999;-1.7119151237029577306;0.034151418078654648125;0.80249981226421363001;0.76731543239082189434;1.900627141860693925;0.53563495923561121881;1.6222860278269364276;4.0768413784245547404;-1.0001283122552673266;2.1576205837084496686;2.9516906766259585204;3.0699451326215028146;0.78732559835197413189;1.9837411105777200682];
IW1_1 = [0.56707722138944549606 -0.73587557670635694862 0.1013997450347653706 5.4443017320810165316;3.5270349306033210723 0.13865361957742225463 0.37972431269480794169 -0.05108853576617666814;0.74186748066191998685 7.9214407380526692393 0.20528343467148851831 -0.36311701123967676796;-2.5819711038257371349 -0.078555479409044656758 -0.88445450234669420464 -0.045976626248028042154;-0.86999694700718632756 -2.9649427022562178102 -0.16819201128349525742 -0.99319865974101761985;0.11520776697539632238 -0.37817001249448595201 -5.3874853060111220771 0.13300206365721820023;0.71338216344162530547 8.340585832219995055 0.21383822724922216252 -0.34428869217559332494;1.4235751489464991693 -0.018309572707238510464 -0.78451206702244902225 -0.0050530695726010927196;8.9587215563551918507 0.31369028418377342682 0.027435803622938008395 -0.26682028987708056311;-2.4880200953735922553 2.5370397674138498445 -6.4483922417673138483 -6.2866210618542774924;-0.65191826777230099665 -4.6957987620651406857 -1.8904996403240093006 2.6110849881233169079;0.35984135820643897707 -0.13236078596867184576 -1.2082330656942616987 -1.1947051181982728529;0.62932521527110174553 -3.5554473575291445364 -2.591799371645513439 -2.0899326293154176781;0.1459261823169626382 -1.5110440999991412436 0.1918390156563450355 -2.6092074425959439488;-0.086872221274860064733 -0.38459940063312697545 -4.735988137196165404 0.1458216819797323871;-1.8278208795780233054 -4.7329140622071887989 0.71556154455130238645 -3.6699518234527839233;0.33681893552489933219 -3.4327460141534387184 -2.274499422240528812 -2.2386614441776035989;-5.8093721887661153858 -0.46203600998707866632 -0.36459954528681187691 0.4272771723884147832;0.69330509246261906586 1.5473268125742636325 -0.43158425179466869404 -1.9107984381984453037;0.27368500969318521054 -0.55222746653172405384 -0.11152282659661032216 -0.0048244479917990846368;0.14854699930936571262 2.8375133907254186383 1.2308583105072938846 3.0283288514503894362;0.68897824985167921419 0.19264876594467408855 -1.3099221531010707409 -0.056867881618048170267;0.53594186339324190183 0.20322294541393035039 1.9597158000403200884 -0.11271548233819826679;1.2075350949338925499 3.2013258687175207839 -0.54552106914783549119 -1.9930436578287784588;-0.54957630549177260981 -1.1433281985913674728 0.33864109305157441554 1.0928520537131303225;0.5589566159354776298 0.36929407903086092224 2.5290521153018272749 -0.10656518737863300561;0.63169627455087196122 1.9222465274216766762 -0.39390286131956214755 -2.094704440589080896;1.0108224224559683169 2.5142171669096744502 -0.50223202350032347674 -4.3402461999075168109;0.27295466615358748852 0.3870638020084674058 -0.62390409579764849468 0.98372378573950314262;-0.28188230156041838015 0.2949669420406220155 1.713369323934776034 -0.0099441521489498762437];

% Layer 2
b2 = [-4.6583426556099762905;4.7213676737081726742;-1.5440785383601791647];
LW2_1 = [-0.017137171362621141102 5.7675035431353549598 -3.7350621104049248622 5.4595805354011277544 0.047071132249031588657 -0.25335957947878362528 3.5249881693490978662 -7.9262601341728702309 0.43853220581053603544 -0.046314066496259187478 -0.16473445275894899043 0.27742424787490216342 0.96452278266115065719 -0.29242131924884545713 0.52720449884251807671 0.13666014104262991236 -1.3159457626671307029 -0.40041195542335539237 -0.67896310282998728614 2.4578583623079253151 -0.30893660443690329487 -2.2352459721179194219 -3.979009940707280979 1.6431738380181202253 -2.8064392571206275839 4.5562568485439163268 -2.1363341271956390877 -0.055651971240118641715 1.1220293752176162538 -5.7660363818867939045;-0.41889321447449179292 -3.6970363936046379827 -1.0331476072796537125 -4.5724928766142109993 1.0030131519882456992 -1.5577423580735900721 0.82616761401856075864 4.6621925043210090678 -0.14346671169230304499 0.10746302281613669127 -0.22771490321409126878 0.60905616806195794766 0.56384739154737550937 0.29963507550556711667 1.7273313095454279065 0.059766192247027866147 -0.98399781407985253967 0.267217698748770216 -2.5458028043135780827 -0.69488027492653425821 -0.51417797987202940035 -1.6175335324972732742 -1.2891294206374970255 3.3888345363519531972 -6.1802826564652439956 0.0046078509780666018075 -7.1420788608433163347 -0.6531027662055346461 1.2428499097858876077 2.7807259378414319606;-0.51848405585102530502 -3.267040990417006352 -0.46296423330098906979 -3.6786985152118436559 1.0046207404292890608 -1.5707391467279558928 0.25683847177563556841 2.7162689361015566192 -0.10872615102576757562 0.10414794538959545878 -0.22424457773369452229 1.4362963962218711078 0.50629482600134156911 0.4581546358857722101 1.7320488960087305763 0.033335354980433835881 -0.90699380065923995708 0.34150891780809267129 -2.626697235293750321 2.463097871904441849 -0.42111858572793742228 -2.5491490243500480872 0.43735992715825605659 3.7035690788202266788 -7.2897717164083681851 -0.75706078726747727536 -7.2951417289276943023 -0.81968417942528182252 3.1549216665578079244 2.6446416611065122204];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1.30770363073253;1.51045827687986;2.79231937727137];
y1_step1.xoffset = [-0.236444152566333;0.410552837770127;0.0964558461835689];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1);
    Xp1 = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
