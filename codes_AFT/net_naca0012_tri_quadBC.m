function [Y,Xf,Af] = net_naca0012_tri(X,~,~)
%NET_NACA0012_TRI neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Aug-2020 15:05:04.
% 
% [Y] = net_naca0012_tri(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.2551988724663010188;1.9709941925137386409;0.83093534947652136768;0.095612357600315500683;0.089916737021500631188;0.11577613717478855981;0.026057803230875052625;0.026649222377739447548;-0.11354520151943776896;2.3018442414903206306;-0.23657465641096514508;-1.4970204628084391452;-2.2445827191004616985;-1.4030172009581536319;1.6782763856875082542];
IW1_1 = [0.11521055084623980924 -0.41582224814834101156 -0.20830571717075302418 0.17171782064396695633 -0.036523239262488835233 -2.6869758898065323471 0.77460746388691215092 0.096037837639435019721;0.071853884511471927121 -1.4533918392650602147 0.3383172860592452702 0.10811310147762992484 -0.00027337996978412770332 -2.0773189341038555966 0.72444271521521075297 0.016980386397577030416;-3.9819883209061732697e-05 0.2581732465999317383 -0.16441393433741782748 4.2310176487068899522e-06 -0.00079063532715637711151 -0.064362908832117843305 -0.19427741116689722922 -0.00036067937282640828928;-0.0072142007835008922431 4.5637659443452678332 0.20866527307280169357 -0.013894184919342123657 0.0074201328900076026288 -0.9973031006138520782 -3.4042312220587205296 0.003563843633823064478;0.00040727318344813069791 0.15186191658125974824 -0.60883237023934189125 -0.003081554735965120681 0.0010678268545608218636 -0.55838901637137017264 0.15089132448544984033 -0.0015170075170583491656;-0.0048590934361676290168 -2.5621472611471554082 -1.4535281926608194514 -0.027169641271685512213 -0.0662660384893754284 -0.17860563435909984631 3.6856831252513306829 -0.0081479258798473983699;-0.0059284884012610452111 -2.0774568303093956523 -1.5793915518656627128 -0.022121633722957969453 -0.070629575027136931586 -0.30418097064473592628 3.9194234088395432103 -0.00088307750404636835284;0.0072657802785203833007 0.24442344273164837154 -2.2570193288396018794 0.033922101941743748599 -0.018873847206072411758 -3.625928885458389761 1.6004235257562071659 0.012586057748736454234;-0.01311726140572646096 0.41121807301411145152 -3.2156239715904373355 -0.08117147515162730087 -0.0083335482501478447964 0.57406984979037756212 -2.987872912895605193 -0.083797554939391991069;-0.16626573376085707068 -1.9182363913932949373 -1.5173825732308470204 -0.034717148888464506584 0.089916700134946847545 0.73715516494305510786 -0.76398285186134329283 -0.1796688351394009342;-0.035574377476136481713 2.7559094215223414182 3.1131480310214585394 -0.04300129203962133051 0.31302936809764136949 7.9644104402856417124 -0.91375794294627321612 -0.35650896769764472971;0.0022304180098513580813 0.41661440600881960439 -0.24733264700447651907 -0.00065216157328574326461 0.00122676614463462395 -0.0051572772981320043686 -0.35388990593524000117 2.5684286468432573295e-05;-0.0029803948005312861508 1.2028198106367860021 -3.3727265996222910438 -0.1190722625493954856 0.024009798012217486302 -1.5069763276791650064 0.094127107050144528944 -0.03448606544573824817;0.089637076194186884881 -0.49836457730267263999 -0.29282884621287502691 -0.019089744169342615088 0.12866288314783108637 1.9425342145823054629 -1.5224741886351726983 -0.067792052559316945404;0.0049828718156916997767 -0.19940932638162189861 1.8735118673295612091 0.062315026690420723121 -0.010772696396996267465 1.4929077469135902945 -0.54383917432529382818 0.04394167156420476783];

% Layer 2
b2 = [-1.0242879489300906748;-0.44737869953133868606;-0.65838761324856365231;0.06365274264059860021;1.1730184465728978882;-1.1343181996754045926;2.163999518977272718;0.68896090282244926151];
LW2_1 = [-0.05664952351197567737 0.057190275594663247949 -1.299074936958218629 -0.49214412132055773696 0.20830510939632351786 0.55849934674666779078 -0.96758287737031334341 -0.031749668675830254594 0.13303693897735827112 -0.11374710399546456019 0.029848784141010074877 -1.8774267146906780113 0.46110342323899650152 -0.17829025078342286559 0.68305781425762113201;-3.0908352297970758116 0.84534485756701072123 1.2429812589674618106 -0.21922197286220299062 0.22510069036271251885 2.8467586265005366819 -2.3646900264222954213 -1.1034803914987698636 -0.74722595183873252722 -0.10475349171234897561 0.0095444207206061663917 0.61306531834186550611 0.93064675218645154242 -1.8450025226300712511 1.6997768410071276701;1.9447934596528100304 2.3052760218930918867 -2.1424195431594368344 1.5701396505435214479 3.5897096707059334975 2.7145466598338856556 -1.8414934158256426322 0.67237119820345558896 0.67718428482254855449 0.16424383525799879369 -0.0096030778583285469202 1.5529860898953629089 0.15481776290432100462 1.8051241000003999115 0.91034468416797498236;1.0234757935955032249 -1.2320648347493967645 2.0702112811939406001 -0.45973380728147866803 0.88641373806740952901 0.51622932973989932304 -0.91539491218408075568 -0.53180956285161995467 0.44761077683767419577 -0.031724265791707867423 0.012751005519832396898 1.8833282162181488317 0.69528597859723029195 0.03242440768232510151 1.2330042426166076819;1.0195341098066441621 -1.2031238150836736089 2.1163072657018031641 0.28251748185319996987 0.54750200526528391975 -0.3497025202323281734 0.57140924582526186892 -0.44531112262321509432 0.21587388716607108785 0.13343657588805044045 -0.032345423408915212338 2.7772032799191848085 -0.039895607321117326771 0.28647105418834273305 0.13256509579854791614;-1.0634648237765988998 -0.21460401462282258089 0.27158984668400565354 0.021926088716592483097 1.5737549189009549799 0.015198728528022979398 0.022649923006655577756 0.61826850594023319285 -0.027918704390228785833 -0.04531541141912288212 -0.07113996728288252136 0.11147096083614443929 0.0034416784419745733575 -0.0025442800023654141804 -0.035011159189616211651;0.063139008053753789551 1.3189846510697806892 0.0094208704226562255818 -0.72426571593430721929 0.3568873695247113953 -1.5802514765689406051 -4.6829269721256210346 1.1519173938907720789 2.3144651410762810961 0.93379955128600000691 -1.1388745031173848066 -0.941005416846909859 -0.91277533449508974073 -0.6576555793499666569 0.36560695364114909056;-0.14502484915701488455 0.2031810740508216695 0.18571936560423846219 0.0024636285487912496818 1.0803905514130833776 0.012962690834953015384 0.00068975497260148437278 0.37030083760389403968 0.012059872029606382576 -0.022353368371698930511 -0.010781518676488292818 -0.059479669998216973259 -0.54177830807521210055 -0.056362317883027333865 -0.03519436987306181347];

% Layer 3
b3 = [-0.64790601695484750788;-0.34715015754318462315;0.53545198809925043104];
LW3_2 = [-3.5751381483226096769 -0.0029402098701935878121 0.0040984986257575515764 2.2159667828067552975 -2.671653016287570015 -2.7819817825269672618 -0.0048652792485927272639 -2.2029274200015471763;3.0980877043883126021 -0.0010097246736494231746 0.0057039762569125089867 -1.9933623104418012328 2.1088309031961105511 -1.2512642335965880047 0.0051521363783967617095 -1.0048844473713529624;-0.64026213289896882763 -2.4713517583039501524 -2.206840740520674693 0.62944710687176586017 -0.87876598547290252217 -0.32149759941581462774 -0.19939280062117231695 -0.19872234755971041054];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.106583722686248;0.106817754102769;1.81410237203832];
y1_step1.xoffset = [-9.40094045742707;-9.35982834147523;0.00155819957908453];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
