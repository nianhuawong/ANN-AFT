function [Y,Xf,Af] = net_naca0012_tri_fine(X,~,~)
%NET_NACA0012_TRI_FINE neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 09-Aug-2020 10:21:18.
% 
% [Y] = net_naca0012_tri_fine(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_remove = [2 3 6 7];
x1_step1_keep = [1 4 5 8];
x1_step2_xoffset = [-2.12536489745503;-0.544114911973483;-2.27223783018806;-2.01913439235065];
x1_step2_gain = [0.547198330660698;0.508916130469259;0.449921353851259;0.480678119723576];
x1_step2_ymin = -1;

% Layer 1
b1 = [2.6392965009869629;-3.4228846895815872;3.0966685488801136;-0.93164533456742848;-2.3264655204426314;-0.067684620020068517;1.5777399040231854;-1.5006038506941255;0.93696564454024778;0.95561912111324065;-2.1412642839451972;1.1698770017240756;-2.682301663682106;-2.8747594243225003;-1.8171032360720527];
IW1_1 = [-6.1085078071799792 -4.0507671023493286 -0.11114943577644082 -3.0279245212412915;5.6677432819435953 -0.2615630762076484 -1.1009787663013795 0.093438491517253849;-6.3767737270074072 -1.7956073698165389 -0.12851580008340699 4.0656207467703878;2.4138919838910762 0.37106774947695764 1.616785349321344 -0.40999799944799054;0.3180403110273427 -4.3489385275346866 0.1553437667103342 -5.1542109489040016;0.05786615957000573 0.44651303061254388 0.04631731415025208 -0.29996176784770745;-4.3683591411328431 -0.29135729581973324 -0.49736299922901733 0.27836747953456675;-0.37567978181161926 0.18866038473444005 4.1622317948574254 -0.069795524379659704;0.18029446752605813 1.5701424513170006 0.017805459137602762 -0.39041138648047585;0.069563921498816891 0.12127244365855887 0.066751239016814498 -2.1251518357153176;-0.26292742952849957 -6.1585739979643854 -0.11470829390012438 -0.40222926655784458;1.8214314506177238 0.45354226437380402 -1.5515980561857163 -0.23117947044046264;-0.46491165763700709 -9.4424726603501057 -0.22135235378727566 2.3371572683198223;-3.0175117473526747 -1.479084763030013 0.80211280972294197 1.9455081718559464;-1.2505249315123683 -0.8043761373341991 -2.6762588024840483 0.5559294648961598];

% Layer 2
b2 = [-6.831799395629452;-4.3547467263311823;-1.2801111733304096;-1.2212456775548903;-0.57332290026536159;-0.16725200051072175;-0.15671714396108255;4.5024023466669645];
LW2_1 = [-0.16568042380169273 0.018693253618601916 -0.18771549007034322 -0.5267131059647574 0.23639875872491611 3.7146154114597811 -0.32813731838154275 -5.8989372598679788 -0.56226845444414486 -1.2123714439366509 0.50313202619689934 0.98545339296452417 0.031730450155279664 -0.51174064696664878 -0.80701365014807636;0.011779510396494604 -0.52092997621992443 -0.0045687754739680408 0.74064782238075544 0.021857827617505723 1.8040884256342602 0.18514326455440566 -0.56115380943952686 -0.28780434183028825 -0.43802980034275912 0.061850815991533296 0.067961462536775707 -0.13408768870680521 -1.939851641401517 -1.683030021963702;-0.023388059362764134 0.31726425138372866 0.01260553157582643 -0.15737051995262208 -0.089723181293753743 -4.3570488575615416 -0.22928709973021372 0.41564033048139665 2.6927722846290947 0.90325796662344382 0.89629757566980273 -0.25174291460695714 0.31460014925932611 0.44246647003237305 0.80174645192664151;0.037650441341773526 -0.3798893901956053 0.0070498806185131276 0.327541595085377 -0.0014652406179553198 3.1022000921115227 0.18656615542232335 -0.46857874487074458 -2.2651971081639899 -0.48603216417391609 -0.68648613139483194 0.13041853367079859 -0.39332659582966373 -0.65657177336827988 -0.78558793967012019;0.28859945664422298 0.28389470403331857 0.20745984591725988 0.071733289453907528 -0.12890902937407397 -1.5254809077086793 0.30527857183731377 -0.025080886266788473 0.22122357832195286 0.49972734010720959 -0.21907399165224786 0.070317046616926074 -0.19972597931298405 -0.0086098800207935061 -0.13935648014647417;-0.48360525355348055 -0.50562211047748695 -0.36613944162129308 0.0042598021188262952 0.22342869448487912 3.322586383985155 -0.40376195245756985 -0.33811397156031825 -1.2163909247027826 -0.99100514429748243 0.019149905544496255 0.54378960889671779 0.2266565830625687 -0.13321083765615405 -0.48326984273383983;0.017324067171212529 0.12210140534368601 0.023457071644774861 -0.039806897652636251 -0.012791360670632293 -1.386219617981501 -0.093979961187126912 0.16085325042444412 1.1199841437301434 0.23436752396495622 0.34791169062239502 -0.10949178782729524 0.1323940272035363 0.18251677845550393 0.32883923873935883;-1.5746210852057336 -0.8747140804748107 -2.1917891025368355 0.14355418928541114 0.032193333060819992 1.605947054878706 -0.13599816129125278 -0.38026045146781867 -2.098461992397548 -0.089274958434624921 -0.45663066749404169 -0.014594757835111121 0.25612351468929706 -0.3367872294284141 -0.42492640627895528];

% Layer 3
b3 = [-1.023059016033665;0.12782249845425142];
LW3_2 = [-0.48901376106189526 -2.0097578673150518 -3.0563277821075623 3.5874571063791199 1.7824401366338016 1.7838856054368666 9.8813307827386208 1.0546345075121402;0.28785138261901 -1.4105771460627077 -2.0119114065268762 2.3642812850967663 -2.5436006628193457 -1.2441265737170404 4.3638186393932292 -0.44046135164073247];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [0.994189532150814;1.12173777583708];
y1_step1_xoffset = [-0.526262919467617;0.274479210544353];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
