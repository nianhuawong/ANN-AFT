function [Y,Xf,Af] = net_naca0012_tri_fine_ns(X,~,~)
%NET_NACA0012_TRI_FINE_NS neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Aug-2020 11:17:17.
% 
% [Y] = net_naca0012_tri_fine_ns(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-10;-10;-10;-10;-10;-10;-10;-10];
x1_step1.gain = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.7572242998514029377;-1.5360919270916979507;-0.42265890281481149904;1.1837359729764529437;-0.93228188800443789752;0.7522212878374368028;0.77770882206352243138;0.15806006284341292401;0.5103670800652904127;-0.48095648848054006752;0.55016608043295556207;-0.95302116121093516377;0.16096508592695735196;-1.2595850060344042642;-1.3614997387940388496];
IW1_1 = [-0.036168227192448887397 0.39518260186049558591 -1.6350633057509227353 -0.10537410151818916992 -0.029011118012792581899 -0.35603598611630649096 -0.86235413065550081679 -0.0037374563225369716347;-0.00056539480248586767522 0.76606993432123482446 -0.85647401263552813688 0.0061926580105887045827 -0.033428450144804590372 0.48996127425566732283 0.12119438072490380798 0.0094394064211246221652;-0.030676187155990700117 -0.53772599427808287498 1.3423558977188132513 -0.014046349383563333513 0.057851400945398277764 -0.88384911747691830008 -0.041751629933828186825 0.030184296019187342036;-0.0016118915810235819562 0.054626152302222792667 -0.181760953120727764 0.00717496950611387109 -0.0033945852588763499209 0.16520689600678273301 0.81766613108107943919 -0.014890115433612009788;0.024957559113764637287 1.5467094356272457212 -1.1327195665310376693 0.022741884915792019012 -0.021889641868010598774 0.90151042114458446175 -0.3505364566791207559 -0.018664491759729538028;0.0076518252663067866381 0.90948753469034282482 0.18960282507161532739 -0.021418773283932088236 -0.16232000118267142508 -0.65016298164383867775 -1.6065373411051171448 0.11525488491251317802;-0.018197008848983384222 0.2220675525209121759 1.1034655636900956299 -0.0769659173907095151 -0.22799487333879092654 -2.8949571388205992406 0.41752851857741646313 0.16046936838676131853;0.0068363282632213813461 4.1739060364279669813 -3.1152694745199647208 0.017456697635142005148 -0.017084528509924801903 -0.58126598111014038395 1.5364208126596066162 -0.091181742661354883706;-0.053441321115987219792 1.2728439350949087849 -1.2392461767057991739 -0.10938312035714180259 -0.071030556313057366391 -2.3243026217871518568 0.18354772493456855686 0.024438745718964999948;-0.014003954616269995853 0.29455449442332420906 -0.13936555694942842631 -0.018017521067449256134 0.0011944600233957454634 -1.0477450210368175476 1.5185054900666603572 -0.013035131959119199141;0.024313631570341030091 3.0987111919683614225 -2.1969254669330777752 0.026730464937221178057 -0.030357953736952835583 1.7421553489599588271 -1.052817910361795839 -0.029232886516924735248;0.027147220005476792315 2.3521205309752177826 -2.3844607123212337996 0.058579054299080814128 0.0042522778645862754562 1.415452476158684858 0.36737374819721319019 -0.067937799380441477037;-0.012800260946732958459 2.3488978614706113035 -2.1750429595551756812 -0.033125831224898885652 -0.024986776727703798734 -2.5201609675247333975 2.6861159125377120915 -0.046227981961836431268;0.0087903039530100642723 -0.65038445112716436469 0.41479148212188526879 0.014954035596221758667 0.015624768584061728485 0.82889420941686442479 -1.733146943140256635 0.031148099499770182108;0.019602405891844174729 -1.7751781538473818678 1.3824654656067771885 0.0079638032924623548825 0.031230735354675492887 0.57327992774543490295 0.91561812365352301946 -0.0020741609761872350191];

% Layer 2
b2 = [1.3105918394511015812;0.50926437612449815262;1.2977764718099442653;0.43430630259463992582;-0.057731171511939509411;-1.0318051189034052051;-1.2296286305082069212;0.046118761588003577556];
LW2_1 = [0.22475083648887470011 0.91752774591993868647 -0.088027515545170298417 -0.085343618115938005286 0.11202399744545088467 0.65836958087890595781 -0.49942090632458008281 -0.8159276227786347313 -0.35724547661184524738 0.25183724865081763555 0.67190407658117312639 -0.13500736608893335045 0.57305123854299877539 0.53604658832866447504 0.15822707825469189968;0.82996961516956746507 1.5191358841973539029 0.77700713741779037225 0.01328052125561258491 1.1237823848611638855 -1.1496554459025460915 1.0716549164461612875 0.88503405015844582859 -0.23786602932016817635 -1.4905365888702515331 -1.7433798408046572437 -0.17034623311321089867 0.66053132604451525456 -1.5615193764319323932 0.40840084479611682422;0.52218748131583825334 1.0157429452444413087 0.18972174907260774823 -0.98403565521132341232 1.7226274775816718954 -0.68645046397347797562 0.53930284921036941714 0.01549338162654727985 0.20277069608509395993 0.022745480153284938774 -0.52851969953257993406 0.33725615030320804655 -1.6374309426405961876 -2.0129875613739103279 -0.53292212268080196846;0.17234254506598126189 -0.019889491544600651496 0.073802073125711076251 -0.12607994841873046421 0.25683187707095433971 0.32678042858277522864 -0.21579186483375983885 -0.30742510196437494718 -0.17146865399535510255 0.54866412888942950321 0.28757534991730943075 -0.035388801303348017824 0.40452065569442130499 0.07268427415437098138 0.072823759662368967027;0.53749369607504526858 -0.18034649927461118835 0.48732647191837691336 0.9887512424797014754 0.16034000213056504025 0.48291112562199406399 -0.38442407419100188548 -1.1140127117823901415 0.51660858237566942286 0.38295000916727944817 0.82074229255123520854 1.5738227822446286819 0.76143271450942484613 1.2750324443625131732 -1.064429296064456576;-0.72080706667270544319 -0.44413565377111979826 0.47721225511380382933 -0.55421942478399166543 -0.59726297556440433034 1.1844306140766052149 -0.85435323354217562741 -0.061575823678399657646 0.1338558989176138192 -2.156135849905268298 -0.041838450205259600234 -0.06349588008357924529 1.0627704882833275413 1.1166281355013796261 -0.40359103698010889705;0.21359489987362337282 0.17315529311909247379 0.094796958311378548556 0.93094486095377215751 -0.18236219467798064908 0.40681316970965164526 -0.497051422963773748 -0.35300498974950761388 1.7751267429885511095 1.6898542769828526211 -1.6111628570856235676 1.6010777941046103745 -0.50476335029547825251 0.64396316763058714105 0.72715968968606137235;0.33197335665357302625 -0.50534089529854575584 -0.022224196057030545098 -1.0294395234695410402 0.83597878568516081899 0.46736042189227472443 -0.29219860271857767131 -0.4675550604863309978 -0.49219672922309659624 0.10014495786075183759 0.36844001700628731255 -0.53724214984829721242 0.52549504110992573125 -0.11371736274645116715 0.23012232877490612637];

% Layer 3
b3 = [-0.8313631464123415471;-0.51925461817431262102];
LW3_2 = [-2.2966795920758698024 -0.5720988652991214618 0.62108184236015784307 2.9211843925616709505 -0.081634893539088149161 0.18774795438597963182 -1.170147911162987775 0.82796448507569331277;0.44731631889159484405 -0.056075055155077616065 0.365074245899276284 1.9842889459443520117 -0.45202878082564262874 -0.10851936603196427056 0.17083881091763070126 -1.3816361011143700743];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.1;0.1];
y1_step1.xoffset = [-10;-10];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
